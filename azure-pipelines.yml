trigger:
- devops

pool:
  vmImage: 'macOS-15'

  

variables:
  APP_IDENTIFIER: 'com.dev.yavia.com'
  APPLE_ID: '5B43L7AV6M'
  ASC_APP_ID: '6746633933'

steps:

- script: |
    echo Mac OS version:
    sw_vers -productVersion
    echo
    echo Installed Xcode versions:
    ls /Applications | grep 'Xcode'
    echo trying to elect:
    sudo xcode-select -switch /Applications/Xcode_26.0.app/Contents/Developer
    echo currently selected xcode:
    xcrun xcode-select --print-path
    echo
  displayName: Show Xcode Version

- task: PowerShell@2
  displayName: Install build scripts
  continueOnError: true
  inputs:
    targetType: inline
    scriptName: ''
    script: >-
      Set-Location -Path '$(Agent.HomeDirectory)'

      Invoke-WebRequest -Uri
      'https://appcenterbuildassets.azureedge.net/buildscripts/appcenter-build-assets-latest.zip'
      -OutFile 'appcenter-build-assets-latest.zip'

      if (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force
      -Recurse }

      New-Item -ItemType directory -Path 'scripts' | Out-Null

      unzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'

      Invoke-Expression 'bash ./scripts/init.sh'
    failOnStderr: true


- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g expo-cli eas-cli
  displayName: 'Install Expo CLI'

- task: DownloadSecureFile@1
  name: iosCert
  inputs:
    secureFile: 'CertificatesDistribIOS26.p12'

- task: DownloadSecureFile@1
  name: iosProfile
  inputs:
    secureFile: 'dev_yavia_react_distrib_pp.mobileprovision'

- script: |
    security create-keychain -p "" build.keychain
    security import $(iosCert.secureFilePath) -k build.keychain -P $(DistribIOS26) -T /usr/bin/codesign
    security list-keychains -d user -s build.keychain
    mkdir -p $HOME/Library/MobileDevice/Provisioning\ Profiles
    cp $(iosProfile.secureFilePath) $HOME/Library/MobileDevice/Provisioning\ Profiles/
  displayName: 'Install iOS credentials'

- script: |
    cd cutesy-finance
    cat > credentials.json <<EOF
    {
      "ios": {
        "provisioningProfilePath": "$(iosProfile.secureFilePath)",
        "distributionCertificate": {
          "path": "$(iosCert.secureFilePath)",
          "password": "$(DistribIOS26)"
        }
      }
    }
    EOF
  displayName: 'Create credentials.json'


- script: |
    cd cutesy-finance
    npm ci
  displayName: 'Install dependencies'
   

- script: |
    set -ex                          # echo commands as they run
    export COCOAPODS_PARALLEL_CODE_SIGN=1
    export EXPO_DEBUG=1              # show verbose EAS output
    cd cutesy-finance
    eas build --platform ios --local --non-interactive --profile production
  env:
    EXPO_TOKEN: $(EXPO_TOKEN)
  displayName: 'Run EAS Build (verbose)'



- script: |
    cd cutesy-finance
    eas submit --platform ios --non-interactive \
      --latest \
      --apple-id $(APPLE_ID) \
      --asc-app-id $(ASC_APP_ID)
  env:
    EXPO_TOKEN: $(EXPO_TOKEN)
  displayName: 'Submit to App Store'
